% This function copies the spacing of an equally spaced connector and pastes 
% it to the beginning or end of an adjacent connector for tanh node distribution.
%       Author          : John Watchorn
%       Version         : 1
% Inputs:
%       ID_copy         -> Input ID of connector from which spacing is copied
%       ID_paste        -> Input ID of connector to which spacing is pasted
%       position        -> 'begin'  : Paste spacing to beginning of adjacent connector
%                          'end'    : Paste spacing to end of adjacent connector
% Outputs:
%       copyPasteCommand -> String containing the copy-paste command
function copyPasteCommand = pwCopyPaste(ID_copy,ID_paste,position)
    switch position
        case 'begin'
            begin_end = 'setBeginSpacing';
        case 'end'
            begin_end = 'setEndSpacing';
    end
    
    copyPasteCommand = append(['pw::Application clearClipboard\n', ...
        '# Use the actual spacing\n', ...
        'set _TMP(INDEX) [lindex [$_CN(',num2str(ID_copy),') getSubConnectorRange 1] 1]\n', ...
        'set _TMP(ACTUAL_SPACE) [pwu::Vector3 length [pwu::Vector3 subtract [$_CN(',num2str(ID_copy),') getXYZ $_TMP(INDEX)] [$_CN(',num2str(ID_copy),') getXYZ [expr {$_TMP(INDEX) - 1}]]]]\n', ...
        'set _TMP(SPC_1) [pw::SpacingExplicit create]\n', ...
        '$_TMP(SPC_1) setValue $_TMP(ACTUAL_SPACE)\n', ...
        'unset _TMP(ACTUAL_SPACE)\n', ...
        'unset _TMP(INDEX)\n', ...
        'pw::Application setClipboard [list $_TMP(SPC_1)]\n', ...
        '$_TMP(SPC_1) delete\n', ...
        'unset _TMP(SPC_1)\n', ...
        'pw::Application markUndoLevel Copy\n', ...
        '\n', ...
        'set _TMP(AVG_SPACE) 0.0\n', ...
        'set _TMP(COUNT) 0\n', ...
        'set _TMP(mode_1) [pw::Application begin Paste]\n', ...
        '  foreach _TMP(SPACE) [$_TMP(mode_1) getEntities] {\n', ...
        '    set _TMP(AVG_SPACE) [expr {$_TMP(AVG_SPACE) + [$_TMP(SPACE) getValue]}]\n', ...
        '    incr _TMP(COUNT)\n', ...
        '  }\n', ...
        '  if {$_TMP(COUNT) > 0} {\n', ...
        '    set _TMP(AVG_SPACE) [expr {$_TMP(AVG_SPACE) / $_TMP(COUNT)}]\n', ...
        '  }\n', ...
        '  unset _TMP(COUNT)\n', ...
        '  unset _TMP(SPACE)\n', ...
        '$_TMP(mode_1) abort\n', ...
        'unset _TMP(mode_1)\n', ...
        '\n', ...
        'set _TMP(mode_1) [pw::Application begin Modify [list $_CN(',num2str(ID_paste),')]]\n', ...
        '  set _TMP(PW_1) [$_CN(',num2str(ID_paste),') getDistribution 1]\n', ...
        '  $_TMP(PW_1) ',begin_end,' $_TMP(AVG_SPACE)\n', ...
        '  unset _TMP(PW_1)\n', ...
        '$_TMP(mode_1) end\n', ...
        'unset _TMP(mode_1)\n', ...
        'unset _TMP(AVG_SPACE)\n', ...
        'pw::Application markUndoLevel {Paste Spacing}\n']);
end